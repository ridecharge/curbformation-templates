{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "v1.0 Creates Bastion Instances",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment to launch these instances into.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "8",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "Can contain 4 to 8 lower case alphanumeric characters."
    },
    "Vpc": {
      "Description": "VPC to launch this subnet into.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "NewRelicToken": {
      "Type": "String"
    },
    "TemplateURLPrefix": {
      "Description": "URL prefix for this stack.",
      "Type": "String"
    },
    "LogglyToken": {
      "Type": "String"
    },
    "AvailabilityZones": {
      "Description": "AvailabilityZones to launch instances into.",
      "Type": "String"
    },
    "PublicInternalHostedZoneInstanceProfile": {
      "Type": "String"
    },
    "PublicInternalHostedZone": {
      "Description": "Route53 Public Internal Hosted Zone for VPC.",
      "Type": "String"
    },
    "PublicInternalDomain": {
      "Description": "Route53 Public Internal Domain for VPC.",
      "Type": "String"
    },
    "PublicExternalDomain": {
      "Description": "Route53 Public External Domain for VPC.",
      "Type": "String"
    },
    "PublicSubnets": {
      "Description": "Subnets to launch Bastion Hosts into.",
      "Type": "String"
    },
    "VpcName": {
      "Description": "Name of the vpc this instance is created in.",
      "Type": "String"
    },
    "ImageId": {
      "Description": "AMI for Bastion Instances",
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "InstanceProfile": {
      "Description": "Instance Profile that allows bastion host to self register dns.",
      "Type": "String"
    },
    "ExternalBastionSecurityGroup": {
      "Description": "Security Group to allow for internet access into the instance.",
      "Type": "String"
    }
  },
  "Resources": {
    "BastionInstances": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "SecurityGroups": {
            "Ref": "ExternalBastionSecurityGroup"
          },
          "Subnets": {
            "Ref": "PublicSubnets"
          },
          "NewRelicToken": {
            "Ref": "NewRelicToken"
          },
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          },
          "PublicInternalHostedZone": {
            "Ref": "PublicInternalHostedZone"
          },
          "VpcName": {
            "Ref": "VpcName"
          },
          "InstanceProfile": {
            "Ref": "InstanceProfile"
          },
          "PublicInternalDomain": {
            "Fn::Join": [
              ".",
              [
                {
                  "Ref": "VpcName"
                },
                {
                  "Ref": "PublicInternalDomain"
                }
              ]
            ]
          },
          "PublicExternalDomain": {
            "Ref": "PublicExternalDomain"
          },
          "ImageId": {
            "Ref": "ImageId"
          },
          "Type": "Bastion",
          "LogglyToken": {
            "Ref": "LogglyToken"
          },
          "UserData": {
            "Fn::Join": [
              "",
              [
                "docker run -d --restart=on-failure:10 -e LOGGLY_TOKEN=",
                {
                  "Ref": "LogglyToken"
                },
                " sgarlick987/aws-startup-utils ./register_dns.py"
              ]
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "network/instances/autoscaling_pair.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    }
  }
}