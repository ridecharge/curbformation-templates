{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "v1.0 Creates Instances for Infrastructure Services.",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment to launch this nat into.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "8",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "Can contain 4 to 8 lower case alphanumeric characters."
    },
    "PublicSubnets": {
      "Description": "Subnets for public instances.",
      "Type": "String"
    },
    "NewRelicToken": {
      "Type": "String"
    },
    "LogglyToken": {
      "Type": "String"
    },
    "PrivateInternalHostedZone": {
      "Description": "Route53 Private Internal Hosted Zone for VPC.",
      "Type": "String"
    },
    "PrivateInternalDomain": {
      "Type": "String"
    },
    "PrivateSubnets": {
      "Description": "Subnets for private instances.",
      "Type": "String"
    },
    "PublicInternalDomain": {
      "Description": "Route53 Public Internal Domain for VPC.",
      "Type": "String"
    },
    "PublicExternalDomain": {
      "Description": "Route53 Public External Domain for VPC.",
      "Type": "String"
    },
    "NATImageId": {
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "BastionImageId": {
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "CidrBlockPrefix": {
      "Description": "CidrBlock for this VPC",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "7",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription": "Must be the first 2 bytes of a CidrBlock."
    },
    "NTPImageId": {
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "PublicInternalHostedZoneInstanceProfile": {
      "Type": "String"
    },
    "PublicInternalHostedZone": {
      "Description": "Route53 Public Internal Hosted Zone for VPC.",
      "Type": "String"
    },
    "NATInstanceProfile": {
      "Type": "String"
    },
    "ENIAttachInstanceProfile": {
      "Type": "String"
    },
    "TemplateURLPrefix": {
      "Description": "URL prefix for this stack.",
      "Type": "String"
    },
    "Vpc": {
      "Description": "VPC for this nat.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "VpcName": {
      "Description": "Name of the VPC to create services in.",
      "Type": "String",
      "AllowedValues": [
        "infrastructure",
        "application"
      ]
    },
    "AvailabilityZones": {
      "Description": "AvailabilityZones to launch networking stacks into.",
      "Type": "String"
    },
    "ExternalBastionSecurityGroup": {
      "Type": "String"
    },
    "InternalBastionSecurityGroup": {
      "Type": "String"
    },
    "NATSecurityGroup": {
      "Type": "String"
    },
    "NTPSecurityGroup": {
      "Type": "String"
    }
  },
  "Conditions": {
    "CreateInfraInstances": {
      "Fn::Equals": [
        {
          "Ref": "VpcName"
        },
        "infrastructure"
      ]
    }
  },
  "Resources": {
    "BastionInstances": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "NATInstances",
      "Properties": {
        "Parameters": {
          "UserData": {
            "Fn::Join": [
              " ",
              [
                "docker run -d --restart=on-failure:10 -e LOGGLY_TOKEN=$LOGGLY_TOKEN",
                "sgarlick987/aws-startup-utils ./register_dns.py"
              ]
            ]
          },
          "Environment": {
            "Ref": "Environment"
          },
          "Role": "bastion",
          "Subnets": {
            "Ref": "PublicSubnets"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "Vpc": {
            "Ref": "Vpc"
          },
          "InstanceProfile": {
            "Ref": "PublicInternalHostedZoneInstanceProfile"
          },
          "NewRelicToken": {
            "Ref": "NewRelicToken"
          },
          "PublicInternalHostedZone": {
            "Ref": "PublicInternalHostedZone"
          },
          "VpcName": {
            "Ref": "VpcName"
          },
          "BastionSecurityGroup": {
            "Ref": "InternalBastionSecurityGroup"
          },
          "SecurityGroup": {
            "Ref": "ExternalBastionSecurityGroup"
          },
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          },
          "ImageId": {
            "Ref": "BastionImageId"
          },
          "LogglyToken": {
            "Ref": "LogglyToken"
          },
          "PublicInternalDomain": {
            "Ref": "PublicInternalDomain"
          },
          "PublicExternalDomain": {
            "Ref": "PublicExternalDomain"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "network/instances/cluster.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    },
    "NTPInstances": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "NATInstances",
      "Condition": "CreateInfraInstances",
      "Properties": {
        "Parameters": {
          "UserData": {
            "Fn::Join": [
              "",
              [
                "docker run -d --restart=on-failure:10 -e LOGGLY_TOKEN=$LOGGLY_TOKEN ",
                "sgarlick987/aws-startup-utils ./attach_eni.py\n",
                "/root/config_network_interface.sh eth1"
              ]
            ]
          },
          "Environment": {
            "Ref": "Environment"
          },
          "Role": "ntp",
          "NewRelicToken": {
            "Ref": "NewRelicToken"
          },
          "LogglyToken": {
            "Ref": "LogglyToken"
          },
          "Subnets": {
            "Ref": "PrivateSubnets"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "SecurityGroup": {
            "Ref": "NTPSecurityGroup"
          },
          "Vpc": {
            "Ref": "Vpc"
          },
          "InstanceProfile": {
            "Ref": "ENIAttachInstanceProfile"
          },
          "VpcName": {
            "Ref": "VpcName"
          },
          "BastionSecurityGroup": {
            "Ref": "InternalBastionSecurityGroup"
          },
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          },
          "ImageId": {
            "Ref": "NTPImageId"
          },
          "PublicInternalHostedZone": {
            "Ref": "PublicInternalHostedZone"
          },
          "PublicInternalDomain": {
            "Ref": "PublicInternalDomain"
          },
          "PublicExternalDomain": {
            "Ref": "PublicExternalDomain"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "network/instances/cluster.json"
            ]
          ]
        },
        "TimeoutInMinutes": "10"
      }
    },
    "NATInstances": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "UserData": {
            "Fn::Join": [
              "",
              [
                "service iptables-persistent start\n",
                "docker run -d --restart=always -e LOGGLY_TOKEN=$LOGGLY_TOKEN",
                " sgarlick987/aws-startup-utils ./nat_monitor.py"
              ]
            ]
          },
          "Environment": {
            "Ref": "Environment"
          },
          "NewRelicToken": {
            "Ref": "NewRelicToken"
          },
          "Role": "nat",
          "Subnets": {
            "Ref": "PublicSubnets"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "Vpc": {
            "Ref": "Vpc"
          },
          "VpcName": {
            "Ref": "VpcName"
          },
          "BastionSecurityGroup": {
            "Ref": "InternalBastionSecurityGroup"
          },
          "PublicInternalDomain": {
            "Ref": "PublicInternalDomain"
          },
          "PublicExternalDomain": {
            "Ref": "PublicExternalDomain"
          },
          "PublicInternalHostedZone": {
            "Ref": "PublicInternalHostedZone"
          },
          "SecurityGroup": {
            "Ref": "NATSecurityGroup"
          },
          "LogglyToken": {
            "Ref": "LogglyToken"
          },
          "InstanceProfile": {
            "Ref": "NATInstanceProfile"
          },
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          },
          "ImageId": {
            "Ref": "NATImageId"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "network/instances/cluster.json"
            ]
          ]
        },
        "TimeoutInMinutes": "10"
      }
    }
  }
}