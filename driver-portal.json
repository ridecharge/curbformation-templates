{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "v1.0 Creates a Driver Portal service",
  "Outputs": {
    "ApplicationName": {
      "Value": {
        "Ref": "ApplicationName"
      }
    },
    "PrivateEndPoint": {
      "Value": {
        "Fn::GetAtt": [
          "PrivateDNSRecord",
          "Outputs.EndPoint"
        ]
      }
    },
    "PublicEndPoint": {
      "Value": {
        "Fn::GetAtt": [
          "PublicDNSRecord",
          "Outputs.EndPoint"
        ]
      }
    },
    "Version": {
      "Value": {
        "Ref": "Version"
      }
    }
  },
  "Parameters": {
    "ApplicationInternalBastionSecurityGroup": {
      "Type": "String"
    },
    "ApplicationName": {
      "Type": "String"
    },
    "ApplicationVPC": {
      "Description": "VPC to launch this subnet into.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "ApplicationVPCPrivateSubnets": {
      "Description": "Subnets to launch app into.",
      "Type": "String"
    },
    "ApplicationVPCPublicSubnets": {
      "Description": "Subnets to launch app into.",
      "Type": "String"
    },
    "AvailabilityZones": {
      "Description": "AvailabilityZones to launch networking stacks into.",
      "Type": "String"
    },
    "BaseImageId": {
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid ami id",
      "Type": "String"
    },
    "Environment": {
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "Can contain 4 to 8 lower case alphanumeric characters.",
      "Description": "Name of the environment to launch services into.",
      "MaxLength": "8",
      "MinLength": "4",
      "Type": "String"
    },
    "LoadBalancerPort": {
      "Default": "443",
      "Type": "Number"
    },
    "LoadBalancerScheme": {
      "Default": "internet-facing",
      "Type": "String"
    },
    "LogglyToken": {
      "Type": "String"
    },
    "NewRelicToken": {
      "Type": "String"
    },
    "PrivateInternalDomain": {
      "Type": "String"
    },
    "PrivateInternalHostedZone": {
      "Description": "Route53 Private Internal Hosted Zone for VPC.",
      "Type": "String"
    },
    "PublicExternalDomain": {
      "Type": "String"
    },
    "PublicExternalHostedZone": {
      "Description": "Route53 Private Internal Hosted Zone for VPC.",
      "Type": "String"
    },
    "TemplateURLPrefix": {
      "Type": "String"
    },
    "Version": {
      "Default": "0.0.7",
      "Type": "String"
    }
  },
  "Resources": {
    "InstanceProfile": {
      "Properties": {
        "Parameters": {
          "ApplicationName": {
            "Ref": "ApplicationName"
          },
          "Environment": {
            "Ref": "Environment"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "services/web/web_profile.json"
            ]
          ]
        },
        "TimeoutInMinutes": "5"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "Instances": {
      "Properties": {
        "Parameters": {
          "ApplicationName": {
            "Ref": "ApplicationName"
          },
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          },
          "Cooldown": "30",
          "DeployMaxBatchSize": "1",
          "DeployMinInstancesInService": "1",
          "DesiredCapacity": "2",
          "Environment": {
            "Ref": "Environment"
          },
          "HealthCheckGracePeriod": "300",
          "ImageId": {
            "Ref": "BaseImageId"
          },
          "InstanceHealthCheck": "/heartbeat",
          "InstancePort": "8080",
          "InstanceProfile": {
            "Fn::GetAtt": [
              "InstanceProfile",
              "Outputs.InstanceProfile"
            ]
          },
          "InstanceSecurityGroups": {
            "Fn::Join": [
              ",",
              [
                {
                  "Fn::GetAtt": [
                    "Security",
                    "Outputs.InstanceSecurityGroup"
                  ]
                },
                {
                  "Ref": "ApplicationInternalBastionSecurityGroup"
                }
              ]
            ]
          },
          "InstanceSubnets": {
            "Ref": "ApplicationVPCPrivateSubnets"
          },
          "InstanceType": "m3.medium",
          "LoadBalancerPort": "443",
          "LoadBalancerSecurityGroup": {
            "Fn::GetAtt": [
              "Security",
              "Outputs.LoadBalancerSecurityGroup"
            ]
          },
          "LoadBalancerSubnets": {
            "Ref": "ApplicationVPCPublicSubnets"
          },
          "LogglyToken": {
            "Ref": "LogglyToken"
          },
          "MaxSize": "2",
          "MinSize": "2",
          "NewRelicToken": {
            "Ref": "NewRelicToken"
          },
          "Scheme": {
            "Ref": "LoadBalancerScheme"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "UserData": {
            "Fn::Join": [
              "",
              [
                "docker run -d --name ",
                {
                  "Ref": "ApplicationName"
                },
                " --link consul:consul ridecharge/",
                {
                  "Ref": "ApplicationName"
                },
                ":",
                {
                  "Ref": "Version"
                },
                "\ndocker run -d --name nginx ",
                "-e SERVICE_NAME=",
                {
                  "Ref": "ApplicationName"
                },
                " --link ",
                {
                  "Ref": "ApplicationName"
                },
                ":app --link consul:consul --link logging:logging ",
                "-p 8080:8080 ridecharge/nginx\n"
              ]
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "services/web/web_autoscaling.json"
            ]
          ]
        },
        "TimeoutInMinutes": "10"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "PrivateDNSRecord": {
      "Properties": {
        "Parameters": {
          "ApplicationName": {
            "Ref": "ApplicationName"
          },
          "Environment": {
            "Ref": "Environment"
          },
          "HostedZoneId": {
            "Ref": "PrivateInternalHostedZone"
          },
          "HostedZoneName": {
            "Ref": "PrivateInternalDomain"
          },
          "LoadBalancerCanonicalHostedZoneNameID": {
            "Fn::GetAtt": [
              "Instances",
              "Outputs.CanonicalHostedZoneNameID"
            ]
          },
          "LoadBalancerDNSHostedZoneName": {
            "Fn::GetAtt": [
              "Instances",
              "Outputs.DNSHostedZoneName"
            ]
          },
          "LoadBalancerScheme": {
            "Ref": "LoadBalancerScheme"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "services/web/web_record_set.json"
            ]
          ]
        },
        "TimeoutInMinutes": "5"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "PublicDNSRecord": {
      "Properties": {
        "Parameters": {
          "ApplicationName": {
            "Ref": "ApplicationName"
          },
          "Environment": {
            "Ref": "Environment"
          },
          "HostedZoneId": {
            "Ref": "PublicExternalHostedZone"
          },
          "HostedZoneName": {
            "Ref": "PublicExternalDomain"
          },
          "LoadBalancerCanonicalHostedZoneNameID": {
            "Fn::GetAtt": [
              "Instances",
              "Outputs.CanonicalHostedZoneNameID"
            ]
          },
          "LoadBalancerDNSHostedZoneName": {
            "Fn::GetAtt": [
              "Instances",
              "Outputs.DNSHostedZoneName"
            ]
          },
          "LoadBalancerScheme": {
            "Ref": "LoadBalancerScheme"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "services/web/web_record_set.json"
            ]
          ]
        },
        "TimeoutInMinutes": "5"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "Security": {
      "Properties": {
        "Parameters": {
          "ApplicationName": {
            "Ref": "ApplicationName"
          },
          "Environment": {
            "Ref": "Environment"
          },
          "LoadBalancerPort": "443",
          "Vpc": {
            "Ref": "ApplicationVPC"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "services/web/web_security.json"
            ]
          ]
        },
        "TimeoutInMinutes": "5"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "StorageBuckets": {
      "Properties": {
        "Parameters": {
          "ApplicationName": {
            "Ref": "ApplicationName"
          },
          "Environment": {
            "Ref": "Environment"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "services/web/s3/buckets.json"
            ]
          ]
        },
        "TimeoutInMinutes": "5"
      },
      "Type": "AWS::CloudFormation::Stack"
    }
  }
}