{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": " v1.0 Creates an Web Autoscaling group",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment to launch services into.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "8",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "Can contain 4 to 8 lower case alphanumeric characters."
    },
    "ApplicationName": {
      "Type": "String"
    },
    "InstanceType": {
      "Description": "Instance type for instance pair.",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "c4.large",
        "m3.medium"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "LoadBalancerSecurityGroup": {
      "Description": "Security Groups for the instances",
      "Type": "String"
    },
    "InstanceSecurityGroups": {
      "Description": "Security Groups for the instances",
      "Type": "CommaDelimitedList"
    },
    "InstanceProfile": {
      "Description": "IAM Instance Profile for instances",
      "Type": "String",
      "Default": ""
    },
    "AvailabilityZones": {
      "Description": "AvailabilityZones to launch networking stacks into.",
      "Type": "CommaDelimitedList"
    },
    "Subnets": {
      "Description": "Subnets to launch NATs into.",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "ImageId": {
      "Description": "AMI to create instances.",
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "UserData": {
      "Description": "Userdata to pass to instance startup.",
      "Type": "String",
      "Default": ""
    },
    "Scheme": {
      "Type": "String",
      "AllowedValues": [
        "internal",
        "internet-facing"
      ]
    },
    "LogglyToken": {
      "Type": "String"
    },
    "NewRelicToken": {
      "Type": "String"
    },
    "MinSize": {
      "Type": "Number",
      "Default": "2"
    },
    "MaxSize": {
      "Type": "Number",
      "Default": "2"
    },
    "DesiredCapacity": {
      "Type": "Number",
      "Default": "2"
    },
    "DeployMaxBatchSize": {
      "Type": "Number",
      "Default": "1"
    },
    "DeployMinInstancesInService": {
      "Type": "Number",
      "Default": "1"
    },
    "LoadBalancerPort": {
      "Type": "Number",
      "Default": "80"
    },
    "InstancePort": {
      "Type": "Number",
      "Default": "8080"
    },
    "InstanceProtocol": {
      "Type": "String",
      "Default": "HTTP"
    },
    "InstanceHealthCheck": {
      "Type": "String",
      "Default": "/health"
    }
  },
  "Conditions": {
    "NoInstanceProfile": {
      "Fn::Equals": [
        {
          "Ref": "InstanceProfile"
        },
        ""
      ]
    }
  },
  "Resources": {
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "SecurityGroups": [
          {
            "Ref": "LoadBalancerSecurityGroup"
          }
        ],
        "Scheme": {
          "Ref": "Scheme"
        },
        "Subnets": {
          "Ref": "Subnets"
        },
        "HealthCheck": {
          "HealthyThreshold": "5",
          "Interval": "10",
          "Target": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "InstanceProtocol"
                },
                ":",
                {
                  "Ref": "InstancePort"
                },
                {
                  "Ref": "InstanceHealthCheck"
                }
              ]
            ]
          },
          "Timeout": "5",
          "UnhealthyThreshold": "3"
        },
        "Listeners": [
          {
            "InstancePort": {
              "Ref": "InstancePort"
            },
            "InstanceProtocol": {
              "Ref": "InstanceProtocol"
            },
            "LoadBalancerPort": {
              "Ref": "LoadBalancerPort"
            },
            "Protocol": "HTTP"
          }
        ],
        "LoadBalancerName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "Environment"
              },
              {
                "Ref": "ApplicationName"
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Role",
            "Value": "Application"
          },
          {
            "Key": "Application",
            "Value": {
              "Ref": "ApplicationName"
            }
          }
        ]
      }
    },
    "AsgLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "EbsOptimized": false,
        "IamInstanceProfile": {
          "Fn::If": [
            "NoInstanceProfile",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "Ref": "InstanceProfile"
            }
          ]
        },
        "ImageId": {
          "Ref": "ImageId"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "Environment"
        },
        "SecurityGroups": {
          "Ref": "InstanceSecurityGroups"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/sh",
                "\nexport LOGGLY_TOKEN=",
                {
                  "Ref": "LogglyToken"
                },
                "\nexport NR_TOKEN=",
                {
                  "Ref": "NewRelicToken"
                },
                "\nexport ENVIRONMENT=",
                {
                  "Ref": "Environment"
                },
                "\n/root/startup.sh\n",
                {
                  "Ref": "UserData"
                }
              ]
            ]
          }
        }
      }
    },
    "AutoScalingGroup": {
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": {
            "Ref": "DeployMinInstancesInService"
          },
          "MaxBatchSize": {
            "Ref": "DeployMaxBatchSize"
          },
          "PauseTime": "PT2M30S"
        }
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {
          "Ref": "AvailabilityZones"
        },
        "LoadBalancerNames": [
          {
            "Ref": "LoadBalancer"
          }
        ],
        "Cooldown": "30",
        "DesiredCapacity": {
          "Ref": "DesiredCapacity"
        },
        "HealthCheckGracePeriod": "30",
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "AsgLaunchConfiguration"
        },
        "MaxSize": {
          "Ref": "MinSize"
        },
        "MinSize": {
          "Ref": "MaxSize"
        },
        "VPCZoneIdentifier": {
          "Ref": "Subnets"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Environment"
                  },
                  {
                    "Ref": "ApplicationName"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Role",
            "Value": "ApplicationName",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    }
  }
}