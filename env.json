{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "v1.0 Creates a network for environment.",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment to launch these VPCs into.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "8",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "Can contain 4 to 8 lower case alphanumeric characters."
    },
    "NATImageId": {
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "Default": "ami-72391f1a",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "BaseImageId": {
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "Default": "ami-ae3c1ac6",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "NTPImageId": {
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "Default": "ami-74391f1c",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "TemplateURLPrefix": {
      "Description": "Path to templates in the s3 bucket",
      "Type": "String"
    },
    "NewRelicToken": {
      "Type": "String"
    },
    "LogglyToken": {
      "Type": "String"
    }
  },
  "Mappings": {
    "RegionMappings": {
      "us-west-1": {
        "AvailabilityZones": [
          "us-west-1a",
          "us-west-1b"
        ]
      },
      "us-east-1": {
        "AvailabilityZones": [
          "us-east-1a",
          "us-east-1c"
        ]
      }
    },
    "EnvironmentMappings": {
      "test": {
        "ApplicationVpcCidrPrefix": "10.250",
        "InfrastructureVpcCidrPrefix": "10.251"
      },
      "ops1": {
        "ApplicationVpcCidrPrefix": "10.250",
        "InfrastructureVpcCidrPrefix": "10.251"
      },
      "prod": {
        "ApplicationVpcCidrPrefix": "10.250",
        "InfrastructureVpcCidrPrefix": "10.251"
      },
      "staging": {
        "ApplicationVpcCidrPrefix": "10.250",
        "InfrastructureVpcCidrPrefix": "10.251"
      }
    }
  },
  "Resources": {
    "NetworkServices": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "NATImageId": {
            "Ref": "NATImageId"
          },
          "BastionImageId": {
            "Ref": "BaseImageId"
          },
          "NTPImageId": {
            "Ref": "NTPImageId"
          },
          "LogglyToken": {
            "Ref": "LogglyToken"
          },
          "ApplicationVpc": {
            "Fn::GetAtt": [
              "Network",
              "Outputs.ApplicationVPC"
            ]
          },
          "InfrastructureVpc": {
            "Fn::GetAtt": [
              "Network",
              "Outputs.InfrastructureVPC"
            ]
          },
          "InfrastructurePrivateSubnets": {
            "Fn::GetAtt": [
              "Network",
              "Outputs.InfrastructureVPCPrivateSubnets"
            ]
          },
          "ApplicationPrivateSubnets": {
            "Fn::GetAtt": [
              "Network",
              "Outputs.ApplicationVPCPrivateSubnets"
            ]
          },
          "InfrastructurePublicSubnets": {
            "Fn::GetAtt": [
              "Network",
              "Outputs.InfrastructureVPCPublicSubnets"
            ]
          },
          "ApplicationPublicSubnets": {
            "Fn::GetAtt": [
              "Network",
              "Outputs.ApplicationVPCPublicSubnets"
            ]
          },
          "ApplicationCidrBlockPrefix": {
            "Fn::FindInMap": [
              "EnvironmentMappings",
              {
                "Ref": "Environment"
              },
              "ApplicationVpcCidrPrefix"
            ]
          },
          "InfrastructureCidrBlockPrefix": {
            "Fn::FindInMap": [
              "EnvironmentMappings",
              {
                "Ref": "Environment"
              },
              "InfrastructureVpcCidrPrefix"
            ]
          },
          "PublicExternalHostedZone": {
            "Fn::GetAtt": [
              "HostedZones",
              "Outputs.PublicExternalHostedZone"
            ]
          },
          "PublicExternalDomain": {
            "Fn::GetAtt": [
              "HostedZones",
              "Outputs.PublicExternalDomain"
            ]
          },
          "PublicInternalHostedZone": {
            "Fn::GetAtt": [
              "HostedZones",
              "Outputs.PublicInternalHostedZone"
            ]
          },
          "PublicInternalDomain": {
            "Fn::GetAtt": [
              "HostedZones",
              "Outputs.PublicInternalDomain"
            ]
          },
          "PrivateInternalHostedZone": {
            "Fn::GetAtt": [
              "HostedZones",
              "Outputs.PrivateInternalHostedZone"
            ]
          },
          "PrivateInternalDomain": {
            "Fn::GetAtt": [
              "HostedZones",
              "Outputs.PrivateInternalDomain"
            ]
          },
          "AvailabilityZones": {
            "Fn::Join": [
              ",",
              {
                "Fn::FindInMap": [
                  "RegionMappings",
                  {
                    "Ref": "AWS::Region"
                  },
                  "AvailabilityZones"
                ]
              }
            ]
          },
          "NewRelicToken": {
            "Ref": "NewRelicToken"
          },
          "TemplateURLPrefix": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "TemplateURLPrefix"
                },
                {
                  "Ref": "Environment"
                },
                "templates"
              ]
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-templates/",
              "network/services/services.json"
            ]
          ]
        },
        "TimeoutInMinutes": "20"
      }
    },
    "Network": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "ApplicationVPCCidrBlockPrefix": {
            "Fn::FindInMap": [
              "EnvironmentMappings",
              {
                "Ref": "Environment"
              },
              "ApplicationVpcCidrPrefix"
            ]
          },
          "InfrastructureVPCCidrBlockPrefix": {
            "Fn::FindInMap": [
              "EnvironmentMappings",
              {
                "Ref": "Environment"
              },
              "InfrastructureVpcCidrPrefix"
            ]
          },
          "AvailabilityZones": {
            "Fn::Join": [
              ",",
              {
                "Fn::FindInMap": [
                  "RegionMappings",
                  {
                    "Ref": "AWS::Region"
                  },
                  "AvailabilityZones"
                ]
              }
            ]
          },
          "TemplateURLPrefix": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "TemplateURLPrefix"
                },
                {
                  "Ref": "Environment"
                },
                "templates"
              ]
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-templates/",
              "network/vpcs/vpcs.json"
            ]
          ]
        },
        "TimeoutInMinutes": "10"
      }
    },
    "HostedZones": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "InfrastructureVPC": {
            "Fn::GetAtt": [
              "Network",
              "Outputs.InfrastructureVPC"
            ]
          },
          "ApplicationVPC": {
            "Fn::GetAtt": [
              "Network",
              "Outputs.ApplicationVPC"
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "-",
              {
                "Ref": "Environment"
              },
              "-templates/",
              "network/dns/dns_hosted_zones.json"
            ]
          ]
        },
        "TimeoutInMinutes": "5"
      }
    }
  },
  "Outputs": {
    "BaseImageId": {
      "Value": {
        "Ref": "BaseImageId"
      }
    },
    "NewRelicToken": {
      "Value": {
        "Ref": "NewRelicToken"
      }
    },
    "LogglyToken": {
      "Value": {
        "Ref": "LogglyToken"
      }
    },
    "InfrastructureInternalBastionSecurityGroup": {
      "Value": {
        "Fn::GetAtt": [
          "NetworkServices",
          "Outputs.InfrastructureInternalBastionSecurityGroup"
        ]
      }
    },
    "ApplicationInternalBastionSecurityGroup": {
      "Value": {
        "Fn::GetAtt": [
          "NetworkServices",
          "Outputs.ApplicationInternalBastionSecurityGroup"
        ]
      }
    },
    "TemplateURLPrefix": {
      "Value": {
        "Fn::Join": [
          "-",
          [
            {
              "Ref": "TemplateURLPrefix"
            },
            {
              "Ref": "Environment"
            },
            "templates"
          ]
        ]
      }
    },
    "AvailabilityZones": {
      "Value": {
        "Fn::Join": [
          ",",
          {
            "Fn::FindInMap": [
              "RegionMappings",
              {
                "Ref": "AWS::Region"
              },
              "AvailabilityZones"
            ]
          }
        ]
      }
    },
    "ApplicationVPC": {
      "Value": {
        "Fn::GetAtt": [
          "Network",
          "Outputs.ApplicationVPC"
        ]
      }
    },
    "InfrastructureVPC": {
      "Value": {
        "Fn::GetAtt": [
          "Network",
          "Outputs.InfrastructureVPC"
        ]
      }
    },
    "InfrastructureVPCPrivateSubnets": {
      "Value": {
        "Fn::GetAtt": [
          "Network",
          "Outputs.InfrastructureVPCPrivateSubnets"
        ]
      }
    },
    "ApplicationVPCPrivateSubnets": {
      "Value": {
        "Fn::GetAtt": [
          "Network",
          "Outputs.ApplicationVPCPrivateSubnets"
        ]
      }
    },
    "InfrastructureVPCPublicSubnets": {
      "Value": {
        "Fn::GetAtt": [
          "Network",
          "Outputs.InfrastructureVPCPublicSubnets"
        ]
      }
    },
    "ApplicationVPCPublicSubnets": {
      "Value": {
        "Fn::GetAtt": [
          "Network",
          "Outputs.ApplicationVPCPublicSubnets"
        ]
      }
    },
    "ApplicationVPCDBSubnetGroup": {
      "Value": {
        "Fn::GetAtt": [
          "Network",
          "Outputs.ApplicationVPCDBSubnetGroup"
        ]
      }
    },
    "PublicExternalHostedZone": {
      "Value": {
        "Fn::GetAtt": [
          "HostedZones",
          "Outputs.PublicExternalHostedZone"
        ]
      }
    },
    "PublicExternalDomain": {
      "Value": {
        "Fn::GetAtt": [
          "HostedZones",
          "Outputs.PublicExternalDomain"
        ]
      }
    },
    "PublicInternalHostedZone": {
      "Value": {
        "Fn::GetAtt": [
          "HostedZones",
          "Outputs.PublicInternalHostedZone"
        ]
      }
    },
    "PublicInternalDomain": {
      "Value": {
        "Fn::GetAtt": [
          "HostedZones",
          "Outputs.PublicInternalDomain"
        ]
      }
    },
    "PrivateInternalHostedZone": {
      "Value": {
        "Fn::GetAtt": [
          "HostedZones",
          "Outputs.PrivateInternalHostedZone"
        ]
      }
    },
    "PrivateInternalDomain": {
      "Value": {
        "Fn::GetAtt": [
          "HostedZones",
          "Outputs.PrivateInternalDomain"
        ]
      }
    }
  }
}